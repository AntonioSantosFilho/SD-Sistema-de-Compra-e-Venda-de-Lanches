"""
Django settings for distribulanche project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from django.contrib.messages import constants as messages
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3kwk1sb_enk18k^0kat^5n0z5^sazpwd=yfs9dhrveynq=@l@@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

MERCADO_PAGO_PUBLIC_KEY = "APP_USR-efe243c4-1239-4235-8f41-8bfeeffbe523"
MERCADO_PAGO_ACCESS_TOKEN = "APP_USR-2950190329009440-120114-f383923769d583cd9c714c610a3c40f0-1181482628"




REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',         # Renderiza JSON
       # 'rest_framework.renderers.BrowsableAPIRenderer', # Interface navegável da API
    ],
}


# Application definition

INSTALLED_APPS = [
    'registro',
    'marketplace',
    'pagamentos',
      # Django REST Framework
    'rest_framework',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages', #framework de mensagems
    'django.contrib.staticfiles',
    'django.contrib.humanize', #Humanização
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', # Middleware para armazenar mensagens da sessão
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware', # Middleware de mensagens
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
APPEND_SLASH = False

AUTH_USER_MODEL = 'registro.Usuario'
ROOT_URLCONF = 'distribulanche.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Inclui a pasta templates na raiz
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages', # Para passar mensagens para o template
            ],
        },
    },
]
WSGI_APPLICATION = 'distribulanche.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
LOGIN_REDIRECT_URL = '/marketplace/'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Caminho base do projeto
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# URL prefixo para arquivos estáticos
STATIC_URL = '/static/'

# Diretórios adicionais onde os arquivos estáticos estão localizados
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Diretório para onde `collectstatic` copia os arquivos
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Recuperação de senha
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'distribulanche@gmail.com' 
EMAIL_HOST_PASSWORD = 'wrvfvkvbabzptczr'  # foi usado a senha gerada pelo google
DEFAULT_FROM_EMAIL = 'no-reply@distribulanche.com.br'  
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER